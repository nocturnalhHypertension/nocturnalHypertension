const labels = {
  zh: ["HTN", "收缩压 (mmHg)", "舒张压 (mmHg)", "nRAAS", "eGFR (ml/min/1.73m²)", "BMI", "年龄（岁）"],
  en: ["HTN", "SBP (mmHg)", "DBP (mmHg)", "nRAAS", "eGFR (ml/min/1.73m²)", "BMI", "Age (year)"]
};
const sectionTitles = {
  zh: {
    basicInfo: "基本信息",
    predictionResult: "预测结果"
  },
  en: {
    basicInfo: "Basic Information",
    predictionResult: "Prediction Result"
  }
};
const resultLabels = {
  zh: {
    hasNocturnalHypertension: "夜间高血压：",
    classification: "风险分类："
  },
  en: {
    hasNocturnalHypertension: "Nocturnal Hypertension：",
    classification: "Risk Level："
  }
};
const disclaimerText = {
  zh: "本结果由模型生成，仅供参考，最终诊断请以医生意见为准。",
  en: "This result is generated by a model and should be used for reference only. The final diagnosis should be based on the doctor's opinion."
};
const returnButtonText = {
  zh: "返回",
  en: "Return"
};

let language = localStorage.getItem('language') || 'zh';
const inputData = JSON.parse(localStorage.getItem('inputData') || '[]');
let logit; // 提升为全局变量

function updateLabels() {
  document.getElementById('sectionTitleBasicInfo').innerText = sectionTitles[language].basicInfo;
  document.getElementById('sectionTitlePredictionResult').innerText = sectionTitles[language].predictionResult;
  document.getElementById('disclaimerText').innerText = disclaimerText[language];
  document.getElementById('langSelector').value = language;
  document.getElementById('returnButton').innerText = returnButtonText[language];
}

function displayData() {
  const dataDisplay = document.getElementById('dataDisplay');
  dataDisplay.innerHTML = '';
  inputData.forEach((num, index) => {
    const label = labels[language][index];
    const value = index === 0 || index === 3 ? (num === 1 ? (language === 'zh' ? '是' : 'Yes') : (language === 'zh' ? '否' : 'No')) : num;
    const row = document.createElement('div');
    row.className = 'row';
    row.innerText = `${label}: ${value}`;
    dataDisplay.appendChild(row);
  });
}

function displayResult(logit) {
  const resultDisplay = document.getElementById('resultDisplay');
  const classificationDisplay = document.getElementById('classificationDisplay');
  const hasNocturnalHypertension = logit > 0.5 ? (language === 'zh' ? '是' : 'Yes') : (language === 'zh' ? '否' : 'No');
  const classification = logit >= 0.5277 ? (language === 'zh' ? '高风险' : 'High Risk') : logit >= 0.1767 ? (language === 'zh' ? '中风险' : 'Intermediate Risk') : (language === 'zh' ? '低风险' : 'Low Risk');
  const classificationColor = logit >= 0.5277 ? 'red' : logit >= 0.1767 ? 'orange' : 'green';

  resultDisplay.innerHTML = `${resultLabels[language].hasNocturnalHypertension} <span class="result-text" style="color: red;">${hasNocturnalHypertension}</span>`;
  classificationDisplay.innerHTML = `${resultLabels[language].classification} <span class="classification-text" style="color: ${classificationColor};">${classification}</span>`;
}

function calculateLogit(numbers) {
  const coefficients = [0.3613, 0.1573, 0.7385, 0.0832, -0.4204, 0.2025, 0.1063];
  const intercept = 0.3985;
  const means = [0.5349, 136.1688, 85.9318, 0.4657, 63.7566, 24.2838, 49.2479];
  const stds = [0.4988, 22.9108, 14.073, 0.4988, 37.3805, 3.8762, 14.1589];

  const standardizedNumbers = numbers.map((num, i) => (num - means[i]) / stds[i]);
  let linear = intercept;
  standardizedNumbers.forEach((num, i) => linear += num * coefficients[i]);
  return 1 / (1 + Math.exp(-linear));
}

function onLangChange() {
  language = document.getElementById('langSelector').value;
  localStorage.setItem('language', language);
  updateLabels();
  displayData();
  displayResult(logit); // 重新渲染结果
}

function goBack() {
  localStorage.removeItem('inputData');
  window.location.href = 'index.html';
}

updateLabels();
displayData();
logit = calculateLogit(inputData); // 使用全局变量
displayResult(logit);